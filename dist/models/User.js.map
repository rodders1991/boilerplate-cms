{"version":3,"sources":["../../src/models/User.js"],"names":["Types","Field","User","List","add","name","type","Name","required","index","email","Email","initial","unique","password","Password","isAdmin","Boolean","label","schema","virtual","get","defaultColumns","register"],"mappings":";;AAAA;;;;;;AACA,IAAMA,QAAQ,mBAASC,KAAT,CAAeD,KAA7B;;AAEA;;;;AAIA,IAAME,OAAO,IAAI,mBAASC,IAAb,CAAkB,MAAlB,CAAb;;AAEAD,KAAKE,GAAL,CAAS;AACRC,QAAM,EAAEC,MAAMN,MAAMO,IAAd,EAAoBC,UAAU,IAA9B,EAAoCC,OAAO,IAA3C,EADE;AAERC,SAAO,EAAEJ,MAAMN,MAAMW,KAAd,EAAqBC,SAAS,IAA9B,EAAoCJ,UAAU,IAA9C,EAAoDK,QAAQ,IAA5D,EAAkEJ,OAAO,IAAzE,EAFC;AAGRK,YAAU,EAAER,MAAMN,MAAMe,QAAd,EAAwBH,SAAS,IAAjC,EAAuCJ,UAAU,IAAjD;AAHF,CAAT,EAIG,aAJH,EAIkB;AACjBQ,WAAS,EAAEV,MAAMW,OAAR,EAAiBC,OAAO,qBAAxB,EAA+CT,OAAO,IAAtD;AADQ,CAJlB;;AAQA;AACAP,KAAKiB,MAAL,CAAYC,OAAZ,CAAoB,mBAApB,EAAyCC,GAAzC,CAA6C,YAAY;AACxD,SAAO,KAAKL,OAAZ;AACA,CAFD;;AAKA;;;AAGAd,KAAKoB,cAAL,GAAsB,sBAAtB;AACApB,KAAKqB,QAAL","file":"User.js","sourcesContent":["import keystone from 'keystone';\nconst Types = keystone.Field.Types;\n\n/**\n * User Model\n * ==========\n */\nconst User = new keystone.List('User');\n\nUser.add({\n\tname: { type: Types.Name, required: true, index: true },\n\temail: { type: Types.Email, initial: true, required: true, unique: true, index: true },\n\tpassword: { type: Types.Password, initial: true, required: true },\n}, 'Permissions', {\n\tisAdmin: { type: Boolean, label: 'Can access Keystone', index: true },\n});\n\n// Provide access to Keystone\nUser.schema.virtual('canAccessKeystone').get(function () {\n\treturn this.isAdmin;\n});\n\n\n/**\n * Registration\n */\nUser.defaultColumns = 'name, email, isAdmin';\nUser.register();\n"]}