{"version":3,"sources":["../../src/models/Enquiry.js"],"names":["Types","Field","Enquiry","List","nocreate","noedit","add","name","type","Name","required","email","Email","phone","String","enquiryType","Select","options","value","label","message","Markdown","createdAt","Date","default","now","schema","pre","next","wasNew","isNew","post","sendNotificationEmail","methods","callback","err","console","error","process","env","MAILGUN_API_KEY","MAILGUN_DOMAIN","log","Error","enquiry","brand","get","list","model","find","where","exec","admins","templateName","transport","send","to","from","subject","defaultSort","defaultColumns","register"],"mappings":";;AAAA;;;;;;AACA,IAAMA,QAAQ,mBAASC,KAAT,CAAeD,KAA7B;;AAEA;;;;;AAKA,IAAME,UAAU,IAAI,mBAASC,IAAb,CAAkB,SAAlB,EAA6B;AAC5CC,WAAU,IADkC;AAE5CC,SAAQ;AAFoC,CAA7B,CAAhB;;AAKAH,QAAQI,GAAR,CAAY;AACXC,OAAM,EAAEC,MAAMR,MAAMS,IAAd,EAAoBC,UAAU,IAA9B,EADK;AAEXC,QAAO,EAAEH,MAAMR,MAAMY,KAAd,EAAqBF,UAAU,IAA/B,EAFI;AAGXG,QAAO,EAAEL,MAAMM,MAAR,EAHI;AAIXC,cAAa,EAAEP,MAAMR,MAAMgB,MAAd,EAAsBC,SAAS,CAC3C,EAAEC,OAAO,SAAT,EAAoBC,OAAO,wBAA3B,EAD2C,EAE3C,EAAED,OAAO,UAAT,EAAqBC,OAAO,sBAA5B,EAF2C,EAG3C,EAAED,OAAO,OAAT,EAAkBC,OAAO,mBAAzB,EAH2C,CAA/B,EAJF;AASXC,UAAS,EAAEZ,MAAMR,MAAMqB,QAAd,EAAwBX,UAAU,IAAlC,EATE;AAUXY,YAAW,EAAEd,MAAMe,IAAR,EAAcC,SAASD,KAAKE,GAA5B;AAVA,CAAZ;;AAaAvB,QAAQwB,MAAR,CAAeC,GAAf,CAAmB,MAAnB,EAA2B,UAAUC,IAAV,EAAgB;AAC1C,MAAKC,MAAL,GAAc,KAAKC,KAAnB;AACAF;AACA,CAHD;;AAKA1B,QAAQwB,MAAR,CAAeK,IAAf,CAAoB,MAApB,EAA4B,YAAY;AACvC,KAAI,KAAKF,MAAT,EAAiB;AAChB,OAAKG,qBAAL;AACA;AACD,CAJD;;AAMA9B,QAAQwB,MAAR,CAAeO,OAAf,CAAuBD,qBAAvB,GAA+C,UAAUE,QAAV,EAAoB;AAClE,KAAI,OAAOA,QAAP,KAAoB,UAAxB,EAAoC;AACnCA,aAAW,kBAAUC,GAAV,EAAe;AACzB,OAAIA,GAAJ,EAAS;AACRC,YAAQC,KAAR,CAAc,oDAAd,EAAoEF,GAApE;AACA;AACD,GAJD;AAKA;;AAED,KAAI,CAACG,QAAQC,GAAR,CAAYC,eAAb,IAAgC,CAACF,QAAQC,GAAR,CAAYE,cAAjD,EAAiE;AAChEL,UAAQM,GAAR,CAAY,wDAAZ;AACA,SAAOR,SAAS,IAAIS,KAAJ,CAAU,oCAAV,CAAT,CAAP;AACA;;AAED,KAAIC,UAAU,IAAd;AACA,KAAIC,QAAQ,mBAASC,GAAT,CAAa,OAAb,CAAZ;;AAEA,oBAASC,IAAT,CAAc,MAAd,EAAsBC,KAAtB,CAA4BC,IAA5B,GAAmCC,KAAnC,CAAyC,SAAzC,EAAoD,IAApD,EAA0DC,IAA1D,CAA+D,UAAUhB,GAAV,EAAeiB,MAAf,EAAuB;AACrF,MAAIjB,GAAJ,EAAS,OAAOD,SAASC,GAAT,CAAP;AACT,MAAI,mBAASvB,KAAb,CAAmB;AAClByC,iBAAc,sBADI;AAElBC,cAAW;AAFO,GAAnB,EAGGC,IAHH,CAGQ;AACPC,OAAIJ,MADG;AAEPK,SAAM;AACLlD,UAAM,iBADD;AAELI,WAAO;AAFF,IAFC;AAMP+C,YAAS,iCANF;AAOPd,YAASA,OAPF;AAQPC,UAAOA;AARA,GAHR,EAYGX,QAZH;AAaA,EAfD;AAgBA,CAjCD;;AAmCAhC,QAAQyD,WAAR,GAAsB,YAAtB;AACAzD,QAAQ0D,cAAR,GAAyB,qCAAzB;AACA1D,QAAQ2D,QAAR","file":"Enquiry.js","sourcesContent":["import keystone from 'keystone';\nconst Types = keystone.Field.Types;\n\n/**\n * Enquiry Model\n * =============\n */\n\nconst Enquiry = new keystone.List('Enquiry', {\n\tnocreate: true,\n\tnoedit: true,\n});\n\nEnquiry.add({\n\tname: { type: Types.Name, required: true },\n\temail: { type: Types.Email, required: true },\n\tphone: { type: String },\n\tenquiryType: { type: Types.Select, options: [\n\t\t{ value: 'message', label: 'Just leaving a message' },\n\t\t{ value: 'question', label: 'I\\'ve got a question' },\n\t\t{ value: 'other', label: 'Something else...' },\n\t] },\n\tmessage: { type: Types.Markdown, required: true },\n\tcreatedAt: { type: Date, default: Date.now },\n});\n\nEnquiry.schema.pre('save', function (next) {\n\tthis.wasNew = this.isNew;\n\tnext();\n});\n\nEnquiry.schema.post('save', function () {\n\tif (this.wasNew) {\n\t\tthis.sendNotificationEmail();\n\t}\n});\n\nEnquiry.schema.methods.sendNotificationEmail = function (callback) {\n\tif (typeof callback !== 'function') {\n\t\tcallback = function (err) {\n\t\t\tif (err) {\n\t\t\t\tconsole.error('There was an error sending the notification email:', err);\n\t\t\t}\n\t\t};\n\t}\n\n\tif (!process.env.MAILGUN_API_KEY || !process.env.MAILGUN_DOMAIN) {\n\t\tconsole.log('Unable to send email - no mailgun credentials provided');\n\t\treturn callback(new Error('could not find mailgun credentials'));\n\t}\n\n\tvar enquiry = this;\n\tvar brand = keystone.get('brand');\n\n\tkeystone.list('User').model.find().where('isAdmin', true).exec(function (err, admins) {\n\t\tif (err) return callback(err);\n\t\tnew keystone.Email({\n\t\t\ttemplateName: 'enquiry-notification',\n\t\t\ttransport: 'mailgun',\n\t\t}).send({\n\t\t\tto: admins,\n\t\t\tfrom: {\n\t\t\t\tname: 'boilerplate-cms',\n\t\t\t\temail: 'contact@boilerplate-cms.com',\n\t\t\t},\n\t\t\tsubject: 'New Enquiry for boilerplate-cms',\n\t\t\tenquiry: enquiry,\n\t\t\tbrand: brand,\n\t\t}, callback);\n\t});\n};\n\nEnquiry.defaultSort = '-createdAt';\nEnquiry.defaultColumns = 'name, email, enquiryType, createdAt';\nEnquiry.register();\n"]}