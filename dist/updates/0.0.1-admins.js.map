{"version":3,"sources":["../../src/updates/0.0.1-admins.js"],"names":["exports","create","User"],"mappings":"AAAA;;;;;;;;AASAA,QAAQC,MAAR,GAAiB;AAChBC,QAAM,CACL;AAAE,kBAAc,OAAhB;AAAyB,iBAAa,MAAtC;AAA8C,aAAS,qBAAvD;AAA8E,gBAAY,OAA1F;AAAmG,eAAW;AAA9G,GADK;AADU,CAAjB;AAMA","file":"0.0.1-admins.js","sourcesContent":["/**\n * This script automatically creates a default Admin user when an\n * empty database is used for the first time. You can use this\n * technique to insert data into any List you have defined.\n *\n * Alternatively, you can export a custom function for the update:\n * module.exports = function(done) { ... }\n */\n\nexports.create = {\n\tUser: [\n\t\t{ 'name.first': 'Admin', 'name.last': 'User', 'email': 'user@keystonejs.com', 'password': 'admin', 'isAdmin': true },\n\t],\n};\n\n/*\n\n// This is the long-hand version of the functionality above:\n\nvar keystone = require('keystone');\nvar async = require('async');\nvar User = keystone.list('User');\n\nvar admins = [\n\t{ email: 'user@keystonejs.com', password: 'admin', name: { first: 'Admin', last: 'User' } }\n];\n\nfunction createAdmin (admin, done) {\n\n\tvar newAdmin = new User.model(admin);\n\n\tnewAdmin.isAdmin = true;\n\tnewAdmin.save(function (err) {\n\t\tif (err) {\n\t\t\tconsole.error('Error adding admin ' + admin.email + ' to the database:');\n\t\t\tconsole.error(err);\n\t\t} else {\n\t\t\tconsole.log('Added admin ' + admin.email + ' to the database.');\n\t\t}\n\t\tdone(err);\n\t});\n\n}\n\nexports = module.exports = function (done) {\n\tasync.forEach(admins, createAdmin, done);\n};\n\n*/\n"]}